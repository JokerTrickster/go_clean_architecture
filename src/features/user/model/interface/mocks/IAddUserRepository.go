// Code generated by mockery v2.34.2. DO NOT EDIT.

package mocks

import (
	context "context"
	mongodb "main/common/db/mongodb"

	mock "github.com/stretchr/testify/mock"
)

// IAddUserRepository is an autogenerated mock type for the IAddUserRepository type
type IAddUserRepository struct {
	mock.Mock
}

// InsertOneUser provides a mock function with given fields: ctx, userDTO
func (_m *IAddUserRepository) InsertOneUser(ctx context.Context, userDTO mongodb.UserDTO) error {
	ret := _m.Called(ctx, userDTO)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, mongodb.UserDTO) error); ok {
		r0 = rf(ctx, userDTO)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIAddUserRepository creates a new instance of IAddUserRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIAddUserRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *IAddUserRepository {
	mock := &IAddUserRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
